// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SchemaStatus {
	// The schema was successfully reviewed and published
	Published
	// The schema is currently being reviewed
	Review
	// The schema was rejected
	Rejected
	// The schema is deprecated
	Deprecated
	// The schema was archived and should no longer be used.
	Archived
}

model Schema {
	id Int @id @default(autoincrement())

	name String
	description String
	longdescription String?
	version String
	category String
	tags String[]
	downloads Int @default(0)
	status SchemaStatus @default(Review)

	sha512 String
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	Comments Comment[]
	Downloads Download[]
	Likes Like[]


	@@unique([name, version])
}

model Comment {
	id String @id @default(cuid())

	authorId Int
	content String
	replyTo String?
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	schema Schema @relation(fields: [schemaId], references: [id])
	replyToComment Comment? @relation("CommentToComment", fields: [replyTo], references: [id])
	schemaId Int

	Replies Comment[] @relation("CommentToComment")
	Author User @relation(fields: [authorId], references: [id])
}

model User {
	id Int @id @default(autoincrement())

	username String @unique
	email String @unique
	password String
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	Comments Comment[]
	Downloads Download[]
	Likes Like[]
}

model Download {
	id Int @id @default(autoincrement())

	schema Schema @relation(fields: [schemaId], references: [id])
	schemaId Int
	downloader User @relation(fields: [downloaderId], references: [id])
	downloaderId Int
	downloadedAt DateTime @default(now())
}

model Like {
	id Int @id @default(autoincrement())

	schema Schema @relation(fields: [schemaId], references: [id])
	schemaId Int
	liker User @relation(fields: [likerId], references: [id])
	likerId Int
	likedAt DateTime @default(now())
}